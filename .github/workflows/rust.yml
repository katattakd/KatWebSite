name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  lint:
    name: Lint with Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy
      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
  build:
    name: Build & Test with Rust ${{ matrix.rust }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - { rust: stable,            os: macos-latest }
        - { rust: stable,            os: windows-latest }
        - { rust: stable,            os: ubuntu-latest }
        - { rust: beta,              os: ubuntu-latest }
        - { rust: nightly,           os: ubuntu-latest }
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - uses: Swatinem/rust-cache@v1
      - run: cargo build --release
      - uses: actions/upload-artifact@v2
        if: ${{ success() && matrix.os != 'ubuntu-latest' }}
        with:
          name: ${{ matrix.os }}-${{ matrix.rust }}
          path: target/**/katwebsite*
      - run: cargo test
  build-cross:
    name: Build on ${{ matrix.target }} using cross
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - aarch64
          - x86_64
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.target}}-unknown-linux-musl
      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target ${{ matrix.target}}-unknown-linux-musl --release
      - uses: actions/upload-artifact@v2
        if: success()
        with:
          name: ubuntu-latest-stable-${{ matrix.target }}
          path: target/**/katwebsite
